<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Target Name="PlatformCheck" BeforeTargets="InjectReference"
		Condition=" '$(TargetExt)' == '.exe' AND ( ('$(Platform)' != 'x86') AND ('$(Platform)' != 'ARM') AND  ('$(Platform)' != 'x64') )">
		<Error  Text="When building an .EXE, your dependence on curve25519-uwp forces you to target a specific platform (x86 / x64 or ARM). This is because of 
		curve25519-uwp being a C++ WinRT component. You can still build amazing apps. Just change the setting at the top of Visual Studio." />
	</Target>

	<!-- ensure we have a reference to the C++ CRT which may not be present in C#/VB/JS applications -->
	<ItemGroup>
		<SDKReference Include="Microsoft.VCLibs, Version=14.0" />
	</ItemGroup>

	<!-- If the project.json file is missing assume a packages.config
			 based project and add the NuGet v3 assets.  -->
	<ItemGroup Condition="!Exists('project.json') AND !Exists('$(MSBuildProjectName).project.json') AND '$(TargetPlatformIdentifier)' == 'UAP'">

		<PropertyGroup>
			<curve25519-Platform Condition="'$(Platform)' == 'Win32'">x86</curve25519-Platform>
			<curve25519-Platform Condition="'$(Platform)' != 'Win32'">$(Platform)</curve25519-Platform>
		</PropertyGroup>

		<Reference Include="$(MSBuildThisFileDirectory)..\..\lib\uap10.0\curve25519.winmd">
			<!-- Native WinMDs require implementation metadata that tells the 
					 packaging tasks where to look for the native dll to generate activation
					 metadata, we use just the short name then set up the native dll as a
					 a copy local asset.  In nuget v3 projects this is done automatically by 
					 the msbuild task -->
			<Implementation>curve25519.dll</Implementation>
		</Reference>
		<ReferenceCopyLocalPaths Include="$(MSBuildThisFileDirectory)..\..\runtimes\win10-$(curve25519-Platform)\native\curve25519.dll" />
	</ItemGroup>

	<!-- If someone uses this from another C++ UAP project, this will be needed -->
	<ItemDefinitionGroup Condition="'$(TargetPlatformIdentifier)' == 'UAP'">
		<ClCompile>
			<AdditionalIncludeDirectories>$(MSBuildThisFileDirectory)..\..\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
		</ClCompile>
	</ItemDefinitionGroup>
</Project>